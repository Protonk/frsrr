% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nr.R
\name{customNR}
\alias{customNR}
\title{Custom Newton-Raphson Formula Tools}
\usage{
customNR(x, magic = 1597463007, formula, NRmax = 1, tol = 0)
}
\arguments{
\item{x}{A numeric vector of input values.}

\item{magic}{An optional magic number for the initial guess.}

\item{formula}{A custom formula as a function of \code{y} and \code{x}.}

\item{NRmax}{Number of iterations to perform. Default is \code{1}.}

\item{tol}{Tolerance level for stopping criterion. Default is \code{0}.}
}
\value{
A data frame of \code{length(x)} rows with columns:
   \item{input}{The input values}
   \item{initial}{Initial approximation from integer operations}
   \item{final}{Result from final iteration}
   \item{error}{Absolute relative error of final versus standard library}
   \item{converged}{Whether the algorithm converged}
   \item{conv_rate}{Mean rate of convergence}
}
\description{
Set custom Newton-Raphson formula for the Fast Reciprocal Square Root.
}
\details{
While \code{frsr} uses C++ internally, this is difficult to do when 
allowing the user to set a custom formula in an R-like idiom. This
function will be much slower than \code{frsr}.

When \eqn{(A - B * x * y_n^2)} is the formula, B = A - 1
must be true to ensure convergence. If you supply a different iteration step,
you must determine what constraint on A and B is necessary. See
the references for more information.
}
\examples{
\donttest{
x <- c(1, 4, 9, 16)
ex_formula <- quote(y * (1.5 - 0.5 * x * y^2))
result <- customNR(x, formula = ex_formula)
print(result$final)
# [1] 0.9990148 0.4995074 0.3337626 0.2497537
}

}
\references{
Gec, (2024) Answer to "Why does this modified Newton's method fail to converge for N > 1 iterations?" Stack Overflow. \url{https://math.stackexchange.com/a/5007745/1025433}
}
